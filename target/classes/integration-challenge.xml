<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="HTTP_Listener_8081" host="localhost" port="8081" doc:name="HTTP Listener Configuration"/>
    <cxf:configuration name="CXF_Configuration" enableMuleSoapHeaders="true" initializeStaticBusInstance="true" doc:name="CXF Configuration"/>
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" database="avenue" doc:name="MySQL Configuration"/>
    <flow name="soapFlow">
        <http:listener config-ref="HTTP_Listener_8081" path="soap" doc:name="HTTP"/>
        <cxf:jaxws-service configuration-ref="CXF_Configuration" serviceClass="avenue.EmployeePort" doc:name="CXF"/>
        <component class="avenue.EmployeePortImpl" doc:name="Java"/>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.soapaction contains 'calculateEmployeeBonus']">
                <custom-transformer class="com.avenuecode.challenge.integration.EmployeeBonusTransformer" doc:name="Bonus"/>
            </when>
            <when expression="#[message.inboundProperties.soapaction contains 'getAvarageSalary']">
                <db:select config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[select avg(salary) as avg1 from employees]]></db:parameterized-query>
                </db:select>
                <set-variable variableName="var_avg" value="#[payload[0].avg1]" doc:name="Variable"/>
                <custom-transformer class="com.avenuecode.challenge.integration.AvgSalaryTransformer" doc:name="Java"/>
            </when>
        </choice>

    </flow>
    <flow name="restFlow">
        <http:listener config-ref="HTTP_Listener_8081" path="employees" doc:name="HTTP">
            <http:response-builder>
                <http:header headerName="Content-type" value="application/json"/>
            </http:response-builder>
        </http:listener>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.method' == 'GET']">
                <db:select config-ref="MySQL_Configuration" doc:name="select">
                    <db:parameterized-query><![CDATA[select * from employees]]></db:parameterized-query>
                </db:select>
                <json:object-to-json-transformer doc:name="Object to JSON"/>
            </when>
            <when expression="#[message.inboundProperties.'http.method' == 'POST']">
                <json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
                <db:insert config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[INSERT INTO employees (first_name, last_name, salary) VALUES (#[message.payload.first_name], #[message.payload.last_name], #[message.payload.salary]);]]></db:parameterized-query>
                </db:insert>
            </when>
        </choice>
    </flow>

</mule>
